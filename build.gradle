/*
 * Copyright 2016 Daniel Skogquist Åborg
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
apply plugin: 'java-library-distribution'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'distribution'
apply plugin: 'jacoco'

version = '2.3.0'
group = 'org.d2ab'
archivesBaseName = project.name

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    jcenter()
}

dependencies {
    testCompile 'junit:junit:[4.12,5)'
    testCompile 'org.hamcrest:java-hamcrest:[2,3)'
    testCompile 'org.mockito:mockito-core:[2.5,3)'
}

test {
    systemProperty "org.d2ab.sequence.strict", "true"
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

check.dependsOn jacocoTestReport

javadoc {
    options.overview = "src/main/java/overview.html"
}

task javadocJar(type: Jar) {
    classifier 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

jar.dependsOn javadocJar, sourcesJar

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

distributions {
    main {
        contents {
            from { 'README.md' }
            from { 'LICENSE' }
            from { javadocJar }
            from { sourcesJar }
        }
    }
}

if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'Sequence'
                    packaging 'jar'
                    // optionally artifactId can be defined here
                    description 'A lightweight alternative to Java 8 sequential Stream'
                    url 'http://github.com/d2aborg/sequence'

                    scm {
                        connection 'scm:git:https://github.com/d2aborg/sequence.git'
                        developerConnection 'scm:git:https://github.com/d2aborg/sequence.git'
                        url 'https://github.com/d2aborg/sequence'
                    }

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'd2aborg'
                            name 'Daniel Skogquist Åborg'
                            email 'daniel@d2ab.org'
                        }
                    }
                }
            }
        }
    }
}
